{"version":3,"sources":["services/ProofCollectionService.ts","services/orderService.ts","services/ProofDeliveryService.ts","services/index.ts","modules/orderReducer.ts","modules/fineryReceiptPage/styles.ts","modules/fineryReceiptPage/components/itemsSummaryCard.tsx","modules/fineryReceiptPage/components/receiptCalculatorCard.tsx","modules/fineryReceiptPage/components/receiptTotalCard.tsx","modules/fineryReceiptPage/components/orderDetailsCard.tsx","modules/fineryReceiptPage/components/customerDetailsCard.tsx","modules/fineryReceiptPage/pages/home.tsx","modules/fineryReceiptPage/receiptPage.tsx"],"names":["proofCollectionService","config","method","url","API","request","response","data","orderService","itemCode","approvalStatus","proofDeliveryService","OrderReducer","state","action","type","loading","error","isError","message","order","Key","styled","span","Value","CardContainer","div","CardTitle","Currency","Amount","BillingItemContainer","_transformTextToPresentableFormat","text","replace","split","map","_","capitalize","join","ItemListBill","item","Row","Col","className","brand","name","colorName","includes","xs","md","parseFloat","unitPrice","extraCostAmount","ItemsSummary","billing","billingReport","reportData","useMemo","items","billingItemsList","Card","Body","Title","report","i","key","filter","isExtraCost","index","length","roundToOneDecimal","num","Math","round","ReceiptCalculator","totPreVat","get","toString","vat","totalBilledValue","totalBilled","totalPreVAT","VAT","toFixed","OrderDetails","values","orderNumber","dropoffDate","Object","entries","value","CustomerDetails","Address","dropoffAddress","building","Email","customerEmail","pickupDate","customerName","FineryHome","initialState","Home","useReducer","dispatch","React","useEffect","a","async","OrderService","getBillingInfo","isAxiosError","infoCodes","InfoCodeParser","call","Container","bsPrefix","title","id","defaultMessage","onClick","window","location","reload","style","textDecoration","cursor","amount","showHeader","withRouter","path","match","children","to"],"mappings":"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","file":"static/js/6.b956283d.chunk.js","sourcesContent":["import { API } from './api';\r\nimport { AxiosRequestConfig } from 'axios';\r\n// import { IRootOrderResponse } from 'utils/interfaces';\r\n/**\r\n *  Api service used to manage & handle orders\r\n */\r\n\r\nexport class ProofCollectionService {\r\n  async getProofCollection() {\r\n    //request config\r\n    const config: AxiosRequestConfig = {\r\n      method: 'GET',\r\n      url: `/order-pickup-details`,\r\n    };\r\n\r\n    const response = await API.request(config);\r\n    return response.data;\r\n  }\r\n}\r\n\r\nconst proofCollectionService = new ProofCollectionService();\r\n\r\nexport default proofCollectionService;\r\n","import { API } from './api';\r\nimport { AxiosRequestConfig } from 'axios';\r\nimport { IRootOrderResponse, TApprovalStatus, IRootOrderObject, TUserPreferences } from 'utils/interfaces';\r\n/**\r\n *  Api service used to manage & handle orders\r\n */\r\nexport class OrderService {\r\n  /**\r\n   * Get Order details\r\n   *\r\n   * @async\r\n   * @function getOrder\r\n   *\r\n   * @return {object} Order Details\r\n   */\r\n  async getItemsByOrder() {\r\n    //request config\r\n    const config: AxiosRequestConfig = {\r\n      method: 'GET',\r\n      url: '/v2/orders/items',\r\n    };\r\n\r\n    const response = await API.request<IRootOrderResponse>(config);\r\n    return response.data;\r\n  }\r\n\r\n  async updateApprovalStatus(itemCode: string, approvalStatus: TApprovalStatus) {\r\n    //request config\r\n    const config: AxiosRequestConfig = {\r\n      method: 'PUT',\r\n      url: `/orders/items/${itemCode}/approval-status`,\r\n      data: {\r\n        itemCode,\r\n        approvalStatus,\r\n      },\r\n    };\r\n\r\n    const response = await API.request<IRootOrderResponse>(config);\r\n    return response;\r\n  }\r\n\r\n  async updatePreferences(data: TUserPreferences) {\r\n    //request config\r\n    const config: AxiosRequestConfig = {\r\n      method: 'PUT',\r\n      url: '/customers/future/preferences',\r\n      data: data,\r\n    };\r\n\r\n    const response = await API.request<IRootOrderResponse>(config);\r\n    return response;\r\n  }\r\n\r\n  /**Get Complete Billing Info */\r\n  async getBillingInfo() {\r\n    //request config\r\n    const config: AxiosRequestConfig = {\r\n      method: 'GET',\r\n      url: `v2/orders/billing`,\r\n    };\r\n    let response = await API.request<IRootOrderObject>(config);\r\n\r\n    return response.data;\r\n  }\r\n}\r\n\r\nconst orderService = new OrderService();\r\n\r\nexport default orderService;\r\n","import { API } from './api';\r\nimport { AxiosRequestConfig } from 'axios';\r\n// import { IRootOrderResponse } from 'utils/interfaces';\r\n/**\r\n *  Api service used to manage & handle orders\r\n */\r\n\r\nexport class ProofDeliveryService {\r\n  async getProofDelivery() {\r\n    //request config\r\n    const config: AxiosRequestConfig = {\r\n      method: 'GET',\r\n      url: `/order-delivery-details`,\r\n    };\r\n\r\n    const response = await API.request(config);\r\n    return response.data;\r\n  }\r\n}\r\n\r\nconst proofDeliveryService = new ProofDeliveryService();\r\n\r\nexport default proofDeliveryService;\r\n","export { default as OrderService } from './orderService';\r\nexport { default as ProofCollectionService } from './ProofCollectionService';\r\nexport { default as ProofDeliveryService } from './ProofDeliveryService';\r\n","import { Reducer } from 'react';\r\nimport { OrderReceipt } from 'utils/interfaces';\r\n\r\nexport type OrderReducerAction =\r\n  | { type: 'GET_ORDER_COMPLETE'; order: OrderReceipt }\r\n  | { type: 'FETCHING' }\r\n  | { type: 'FETCHING_COMPLETE' }\r\n  | { type: 'SET_ERROR'; message?: string };\r\n\r\nexport interface OrderState {\r\n  loading: boolean;\r\n  error: {\r\n    isError: boolean;\r\n    message?: string;\r\n  };\r\n  order?: OrderReceipt;\r\n}\r\n\r\nexport type TOrderReducer = Reducer<OrderState, OrderReducerAction>;\r\n\r\nexport const OrderReducer: Reducer<OrderState, OrderReducerAction> = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCHING': {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    }\r\n    case 'FETCHING_COMPLETE': {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    }\r\n    case 'SET_ERROR': {\r\n      return {\r\n        ...state,\r\n        error: {\r\n          isError: true,\r\n          message: action.message,\r\n        },\r\n      };\r\n    }\r\n    case 'GET_ORDER_COMPLETE':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        order: action.order,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import styled from 'styled-components';\r\nimport './fonts.scss';\r\n\r\nexport const Key = styled.span`\r\n  font-size: 13px;\r\n  font-family: 'Inter Light';\r\n  color: #625964;\r\n`;\r\n\r\nexport const Value = styled.span`\r\n  font-size: 13px;\r\n  font-family: 'Inter Bold';\r\n  color: #625964;\r\n`;\r\n\r\nexport const CardContainer = styled.div`\r\n  background-color: #fffefc;\r\n  margin-top: 12px;\r\n  line-height: 18px;\r\n  margin-bottom: 12px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n`;\r\n\r\nexport const CardTitle = styled.span`\r\n  font-size: 16px;\r\n  font-family: 'Inria Serif Light';\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nexport const Currency = styled.span`\r\n  font-size: 14px;\r\n  font-family: 'Inria Serif Light';\r\n  color: #4b1574;\r\n  margin-top: 5px;\r\n  margin-right: 6px;\r\n`;\r\n\r\nexport const Amount = styled.div`\r\n  font-family: 'Inria Serif Bold';\r\n  font-size: 20px;\r\n`;\r\n","import React, { useMemo } from 'react';\r\nimport { OrderReceipt, BillingItemsList } from 'utils/interfaces';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport styled from 'styled-components';\r\nimport '../fonts.scss';\r\nimport { Currency, Amount, CardContainer, CardTitle, Key } from '../styles';\r\nimport _ from 'lodash';\r\n\r\ninterface Props {\r\n  order: OrderReceipt;\r\n}\r\n\r\nconst BillingItemContainer = styled.div`\r\n  font-family: 'Inria Serif Bold';\r\n  font-size: 16px;\r\n  line-height: 1;\r\n`;\r\n\r\nconst _transformTextToPresentableFormat = (text: string) => {\r\n \r\n   \r\n    const textWithoutUnderscores = text.replace(/_/g, \" \");\r\n  \r\n    // Capitalize the first letter of each word\r\n    const words = textWithoutUnderscores.split(\" \");\r\n    const capitalizedWords = words.map(_.capitalize);\r\n  \r\n    const capitalizedSentence = capitalizedWords.join(\" \");\r\n  \r\n    return capitalizedSentence;\r\n  \r\n   \r\n};\r\n\r\nconst ItemListBill: React.FC<{ item: BillingItemsList }> = ({ item }) => {\r\n  return (\r\n    <BillingItemContainer>\r\n      <Row>\r\n        <Col className=\"pt-3 mb-2\">\r\n          { _transformTextToPresentableFormat(item.brand) +\r\n            ' ' +\r\n            _transformTextToPresentableFormat(item.name)+\r\n            ', ' +\r\n            _transformTextToPresentableFormat(item.colorName && item.colorName.includes('/') ? 'multicolor' : item.colorName)\r\n            }\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"p-0\">\r\n        <Col>\r\n          <Key>Cleaning</Key>\r\n        </Col>\r\n        <Col xs={'auto'} md={'auto'} className=\"d-flex p-0 mr-3\">\r\n          <Currency>AED</Currency>\r\n          <Col xs={'auto'} md={1} className=\"d-flex p-0\">\r\n            <Amount>{parseFloat(item.unitPrice) + item.extraCostAmount}</Amount>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </BillingItemContainer>\r\n  );\r\n};\r\n\r\nconst ItemsSummary: React.FC<Props> = ({ order }) => {\r\n  let billing = order.billingReport;\r\n\r\n  const reportData = useMemo(() => {\r\n    return [\r\n      {\r\n        items: order && billing ? billing.billingItemsList: [],\r\n      },\r\n    ];\r\n  }, [ order, billing]);\r\n\r\n  return (\r\n    <Card className=\"border-top-0 border-bottom-1 border-left-0 border-right-0 mb-4 bg-baby-powder\">\r\n      <CardContainer>\r\n        <Card.Body className=\"p-0\">\r\n          <Card.Title>\r\n            <CardTitle>Item Summary</CardTitle>\r\n          </Card.Title>\r\n\r\n          {reportData.map((report, i) => {\r\n            return (\r\n              <div key={`resp-${i}`}>\r\n                <Row>\r\n                  <Col xs={12}>\r\n                    <div>\r\n                      {report.items &&\r\n                        report.items\r\n                          .filter((item) => item.isExtraCost === false || !item.isExtraCost)\r\n                          .map((item, index) => {\r\n                            return <ItemListBill item={item} key={`unique${index}`} />;\r\n                          })}\r\n                      {report.items && report.items.filter((item) => item.isExtraCost === true).length > 0 && (\r\n                        <Row className=\"mt-2 mb-1 pl-3 font-weight-normal\">* Extra Charge *</Row>\r\n                      )}\r\n                      {report.items &&\r\n                        report.items\r\n                          .filter((item) => item.isExtraCost === true)\r\n                          .map((item, index) => {\r\n                            return <ItemListBill item={item} key={`unique${index}`} />;\r\n                          })}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            );\r\n          })}\r\n        </Card.Body>\r\n      </CardContainer>\r\n    </Card>\r\n  );\r\n};\r\nexport default ItemsSummary;\r\n","import React from 'react';\r\nimport { OrderReceipt } from 'utils/interfaces';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport _ from 'lodash';\r\nimport { CardContainer, CardTitle, Currency, Amount } from '../styles';\r\n\r\ninterface Props {\r\n  order: OrderReceipt;\r\n}\r\n\r\nconst roundToOneDecimal = (num: number) => {\r\n  return Math.round(num * 10) / 10;\r\n};\r\n\r\nconst ReceiptCalculator: React.FC<Props> = ({ order }) => {\r\n  let billing = order.billingReport;\r\n  const totPreVat = roundToOneDecimal(_.get(billing, 'totalPreVAT', 0)).toString();\r\n  const vat = roundToOneDecimal(_.get(billing, 'VAT', 0)).toString();\r\n\r\n  return (\r\n    <Card className=\"border-top-0 border-bottom-1 border-left-0 border-right-0 mb-4 bg-baby-powder\">\r\n      <CardContainer>\r\n        <Card.Body className=\"p-0\">\r\n          <Row className=\"p-1\">\r\n            <Col>\r\n              <CardTitle>Total Pre VAT</CardTitle>\r\n            </Col>\r\n            <Col xs={'auto'} md={'auto'} className=\"d-flex p-0 mr-3\">\r\n              <Currency>AED</Currency>\r\n              <Col xs={'auto'} md={1} className=\"d-flex p-0\">\r\n                <Amount>{totPreVat}</Amount>\r\n              </Col>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"p-1\">\r\n            <Col>\r\n              <CardTitle>VAT 5%</CardTitle>\r\n            </Col>\r\n            <Col xs={'auto'} md={'auto'} className=\"d-flex p-0 mr-3\">\r\n              <Currency>AED</Currency>\r\n              <Col xs={'auto'} md={1} className=\"d-flex p-0\">\r\n                <Amount>{vat}</Amount>\r\n              </Col>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </CardContainer>\r\n    </Card>\r\n  );\r\n};\r\nexport default ReceiptCalculator;\r\n","import React,{useMemo} from 'react';\r\nimport { OrderReceipt } from 'utils/interfaces';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport styled from 'styled-components';\r\nimport '../fonts.scss';\r\nimport { CardContainer, CardTitle, Currency, Amount } from '../styles';\r\n\r\ninterface Props {\r\n  order: OrderReceipt;\r\n}\r\n\r\nconst Title = styled(CardTitle)`\r\n  font-family: 'Inria Serif Bold';\r\n  margin-bottom: 0px;\r\n  margin-top: 0px;\r\n  font-size: 20px;\r\n`;\r\n\r\n\r\nconst ReceiptCalculator: React.FC<Props> = ({ order }) => {\r\n  let billing = order.billingReport;\r\n\r\n  const totalBilledValue = useMemo(() => {\r\n    const totalBilled = +(billing.totalPreVAT) + +(billing.VAT);\r\n    return parseFloat(totalBilled.toFixed(1));\r\n  }, [billing.totalPreVAT, billing.VAT]);\r\n\r\n  return (\r\n    <Card className=\"border border-blue-violet bg-baby-powder\">\r\n      <CardContainer>\r\n        <Card.Body className=\"p-0\">\r\n          {\r\n            <Row className=\"p-1\">\r\n              <Col>\r\n                <Title>Total Billed</Title>\r\n              </Col>\r\n              <Col xs={'auto'} md={'auto'} className=\"d-flex p-0 mr-3\">\r\n                <Currency>AED</Currency>\r\n                <Col xs={totalBilledValue.toString().length > 4 ? 'auto' : 2} md={1} className=\"d-flex p-0\">\r\n                  <Amount>{totalBilledValue}</Amount>\r\n                </Col>\r\n              </Col>\r\n            </Row>\r\n          }\r\n        </Card.Body>\r\n      </CardContainer>\r\n    </Card>\r\n  );\r\n};\r\nexport default ReceiptCalculator;\r\n","import React from 'react';\r\nimport { OrderReceipt } from 'utils/interfaces';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Key, Value, CardContainer, CardTitle } from '../styles';\r\n\r\ninterface Props {\r\n  order: OrderReceipt;\r\n}\r\n\r\nconst OrderDetails: React.FC<Props> = ({ order }) => {\r\n  const values = {\r\n    'Invoice Number': order.orderNumber,\r\n    'Invoice Date': order.dropoffDate.replace(/-/g, '/'),\r\n    'TR Number': '100284642400003',\r\n  };\r\n\r\n  return (\r\n    <Card className=\"border-top-0 border-bottom-1 border-left-0 border-right-0 mb-4 bg-baby-powder\">\r\n      <CardContainer>\r\n        <CardTitle>\r\n          <Card.Title>Tax Invoice</Card.Title>\r\n        </CardTitle>\r\n        <Card.Body className=\"p-0\">\r\n          {Object.entries(values).map(([key, value]) => (\r\n            <div key={`unique${value}`}>\r\n              {value ? (\r\n                <Row className=\"p-0\">\r\n                  <Col>\r\n                    <Key>\r\n                      {key} <Value>{value} </Value>\r\n                    </Key>\r\n                  </Col>\r\n                </Row>\r\n              ) : (\r\n                <Row className=\"p-0\">\r\n                  <Key>\r\n                    <Col>{key} </Col>\r\n                  </Key>\r\n                </Row>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </Card.Body>\r\n      </CardContainer>\r\n    </Card>\r\n  );\r\n};\r\nexport default OrderDetails;\r\n","import React from 'react';\r\nimport { OrderReceipt } from 'utils/interfaces';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Key, Value, CardContainer, CardTitle } from '../styles';\r\n\r\ninterface Props {\r\n  order: OrderReceipt;\r\n}\r\n\r\nconst CustomerDetails: React.FC<Props> = ({ order }) => {\r\n  const values = {\r\n    Address: order.dropoffAddress.building,\r\n    Email: order.customerEmail,\r\n    'Collection Date': order.pickupDate.replace(/-/g, '/'),\r\n    'Delivery Date': order.dropoffDate.replace(/-/g, '/'),\r\n  };\r\n\r\n  return (\r\n    <Card className=\"border-top-0 border-bottom-1 border-left-0 border-right-0 mb-4 bg-baby-powder\">\r\n      <CardContainer>\r\n        <CardTitle>\r\n          <Card.Title>Order Summary</Card.Title>\r\n        </CardTitle>\r\n        <Card.Body className=\"p-0\">\r\n          {\r\n            <Row className=\"p-0\">\r\n              <Col>\r\n                <Value>{order.customerName} </Value>\r\n              </Col>\r\n            </Row>\r\n          }\r\n          {Object.entries(values).map(([key, value]) => (\r\n            <div key={`unique${value}`}>\r\n              {value ? (\r\n                <Row className=\"p-0\">\r\n                  <Col>\r\n                    <Key>\r\n                      {key} <Value>{value} </Value>\r\n                    </Key>\r\n                  </Col>\r\n                </Row>\r\n              ) : (\r\n                <Row className=\"p-0\">\r\n                  <Key>\r\n                    <Col>{key} </Col>\r\n                  </Key>\r\n                </Row>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </Card.Body>\r\n      </CardContainer>\r\n    </Card>\r\n  );\r\n};\r\nexport default CustomerDetails;\r\n","import React, { useReducer } from 'react';\r\n// React-Bootstrap\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n// Components\r\nimport { ContentPlaceHolder, WmAlert } from 'components';\r\nimport { ItemsSummary, OrderDetails, ReceiptCalculator, ReceiptTotal, CustomerDetails } from '../components';\r\n// extensions\r\nimport { InfoCodeParser } from 'utils';\r\nimport { OrderService } from 'services';\r\nimport { OrderReducer, OrderState, TOrderReducer } from '../../orderReducer';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport styled from 'styled-components';\r\nimport '../fonts.scss';\r\n\r\nconst FineryHome = styled.div`\r\n  background-color: #fbf9f5;\r\n  color: #4b1574;\r\n  font-size: 26px;\r\n  font-family: 'Inria Serif Bold';\r\n`;\r\n\r\nconst Title = styled.div`\r\n  margin-bottom: 26px;\r\n  margin-top: 46px;\r\n`;\r\n\r\nconst initialState: OrderState = {\r\n  loading: false,\r\n  error: {\r\n    isError: false,\r\n  },\r\n};\r\n\r\nconst Home: React.FC = () => {\r\n  const [{ loading, order, error }, dispatch] = useReducer<TOrderReducer>(OrderReducer, initialState);\r\n\r\n  React.useEffect(() => {\r\n    dispatch({ type: 'FETCHING' });\r\n    const call = async () => {\r\n      try {\r\n        const { order } = await OrderService.getBillingInfo();\r\n        order.customerEmail = order.customerEmail.replace('+careem', '');\r\n        dispatch({ type: 'GET_ORDER_COMPLETE', order: order });\r\n      } catch (error) {\r\n        if (error.isAxiosError) {\r\n          const message = error.response ? error.response.data.infoCodes : error.message;\r\n          dispatch({ type: 'SET_ERROR', message: InfoCodeParser(message) });\r\n        }\r\n      } finally {\r\n        dispatch({ type: 'FETCHING_COMPLETE' });\r\n      }\r\n    };\r\n    call();\r\n  }, []);\r\n\r\n  return (\r\n    <FineryHome>\r\n      {error.isError ? (\r\n        <>\r\n          <Container bsPrefix=\"container-sm\" className=\"mt-4\">\r\n            <Row>\r\n              <Col xs={12}>\r\n                <WmAlert type=\"danger\" title={`Something wrong has happened`}>\r\n                  <FormattedMessage id={error.message} defaultMessage={error.message} />\r\n                  <br />\r\n                  <span onClick={() => window.location.reload()} style={{ textDecoration: 'underline', cursor: 'pointer' }}>\r\n                    reload\r\n                  </span>\r\n                </WmAlert>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {loading || !order ? (\r\n            <ContentPlaceHolder amount={4} showHeader={false} />\r\n          ) : (\r\n            <Container className=\"mt-3\">\r\n              <Row>\r\n                <Col>\r\n                  <Title> Receipt </Title>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <ItemsSummary order={order} />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <ReceiptCalculator order={order} />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <ReceiptTotal order={order} />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Title> Details </Title>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <OrderDetails order={order} />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <CustomerDetails order={order} />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          )}\r\n        </>\r\n      )}\r\n    </FineryHome>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Switch, withRouter, RouteComponentProps, Route, Redirect } from 'react-router-dom';\r\nimport { Home } from './pages';\r\n\r\nimport './receiptPage.scss';\r\ninterface Props extends RouteComponentProps {}\r\n\r\n/**\r\n * Finery receipt main page\r\n */\r\nconst FineryReceiptPage: React.FC<Props> = ({ match: { path } }) => {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${path}`} children={<Home />} />\r\n      <Redirect to={path} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default withRouter(FineryReceiptPage);\r\n"],"sourceRoot":""}